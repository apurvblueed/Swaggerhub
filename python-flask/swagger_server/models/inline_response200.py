# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.inline_response200_events import InlineResponse200Events  # noqa: F401,E501
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, events: InlineResponse200Events=None, result: str=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param events: The events of this InlineResponse200.  # noqa: E501
        :type events: InlineResponse200Events
        :param result: The result of this InlineResponse200.  # noqa: E501
        :type result: str
        """
        self.swagger_types = {
            'events': InlineResponse200Events,
            'result': str
        }

        self.attribute_map = {
            'events': 'events',
            'result': 'result'
        }
        self._events = events
        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def events(self) -> InlineResponse200Events:
        """Gets the events of this InlineResponse200.


        :return: The events of this InlineResponse200.
        :rtype: InlineResponse200Events
        """
        return self._events

    @events.setter
    def events(self, events: InlineResponse200Events):
        """Sets the events of this InlineResponse200.


        :param events: The events of this InlineResponse200.
        :type events: InlineResponse200Events
        """

        self._events = events

    @property
    def result(self) -> str:
        """Gets the result of this InlineResponse200.

        If the call was success or not  # noqa: E501

        :return: The result of this InlineResponse200.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result: str):
        """Sets the result of this InlineResponse200.

        If the call was success or not  # noqa: E501

        :param result: The result of this InlineResponse200.
        :type result: str
        """

        self._result = result
